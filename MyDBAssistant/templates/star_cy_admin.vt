using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SISS.Core.Data.Mapping;

namespace ${ns}
{
	#set($className = ${table.GetClassName("$tablePrefix")})

	/// <summary>
	/// $table.TableDescription
	/// </summary>
	[Serializable]
	public class ${className} : SISS.Core.Data.BaseEntity
	{
#foreach($column in $columns)
		#set($index = ${column.PropertyName.IndexOf("_")})
		#set($indexFirst = $index + 1)
		#set($index = $index + 2)
		#set($first = ${column.PropertyName.Substring($indexFirst, 1)})
		/// <summary>
		/// $column.ColumnDescription
		/// </summary>
		public virtual ${column.CSharpType} ${first.ToUpper()}${column.PropertyName.Substring($index).Replace("_", "")} { get; set; }
#end
	}
	
	public class ${className}Map : SISS.Core.Data.Mapping.EntityMappingConfiguration<${className}>
	{
		public ${className}Map()
		{
			this.Table("$table.TableName");			
#foreach($column in $columns)
		#set($index = ${column.PropertyName.IndexOf("_")})
		#set($indexFirst = $index + 1)
		#set($index = $index + 2)
		#set($first = ${column.PropertyName.Substring($indexFirst, 1)})
#if($column.IsPrimaryKey)
			
			this.Property(entity => entity.${first.ToUpper()}${column.PropertyName.Substring($index).Replace("_", "")}).HasColumnName("$column.ColumnName").HasMaxLength($column.Size).HasPrimaryKey().AddToEntityMapping();
#else
			this.Property(entity => entity.${first.ToUpper()}${column.PropertyName.Substring($index).Replace("_", "")}).HasColumnName("$column.ColumnName").HasRequired(#if($column.IsNullable) false #else true #end).HasMaxLength($column.Size).AddToEntityMapping();
#end
#end
			this.AddToEntityMapping();
		}
	}
}